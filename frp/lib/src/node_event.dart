part of node;

class Step{

  Step(Node this.node, Dynamic this.value){

  }

  Node    node;
  Dynamic value;

}

class NodeEvent  {
  NodeEvent(this.value) {
    init();
  }

  //--------------------------------------------------------------------------------------------------------------------
  //
  //                                          Variables
  //
  //--------------------------------------------------------------------------------------------------------------------

  List<Node> path;
  Dynamic value;

  //--------------------------------------------------------------------------------------------------------------------
  //
  //                                          Private Methods
  //
  //--------------------------------------------------------------------------------------------------------------------

  void log(Node n){
    path.add(new Step(n,value));
  }

  //--------------------------------------------------------------------------------------------------------------------
  //
  //                                          Private Methods
  //
  //--------------------------------------------------------------------------------------------------------------------

  void init(){
    path = new List<Step>();
  }
}

class NextEvent<TYPE> extends NodeEvent<TYPE>{

}

class InitialEvent<TYPE> extends NodeEvent<TYPE>{

}
